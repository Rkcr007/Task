[{"line":1,"elements":[{"start_timestamp":"2025-05-17T08:56:52.634Z","line":6,"name":"Get all menu items","description":"","id":"inventory-api;get-all-menu-items","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1974526000,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/inventory\"","match":{"arguments":[{"val":"\"/api/inventory\"","offset":24}],"location":"com.example.api.InventoryStepDefs.i_send_a_get_request_to(java.lang.String)"},"keyword":"When "},{"result":{"duration":9356000,"status":"passed"},"line":8,"name":"the response status code should be 200","match":{"arguments":[{"val":"200","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":899249000,"status":"passed"},"line":9,"name":"the response should contain at least 9 items","match":{"arguments":[{"val":"9","offset":37}],"location":"com.example.api.InventoryStepDefs.the_response_should_contain_at_least_items(java.lang.Integer)"},"keyword":"And "},{"result":{"duration":46194000,"status":"passed"},"line":10,"name":"each item should have fields \"id\", \"name\", \"price\", \"image\"","match":{"arguments":[{"val":"\"id\"","offset":29},{"val":"\"name\"","offset":35},{"val":"\"price\"","offset":43},{"val":"\"image\"","offset":52}],"location":"com.example.api.InventoryStepDefs.each_item_should_have_fields(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T08:56:55.605Z","line":17,"name":"Add item for non existent id","description":"","id":"inventory-api;add-item-for-non-existent-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":417405000,"status":"passed"},"line":18,"name":"I send a POST request to \"/api/inventory/add\" with body","match":{"arguments":[{"val":"\"/api/inventory/add\"","offset":25}],"location":"com.example.api.InventoryStepDefs.i_send_a_post_request_to_with_body(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["id","name","image","price"]},{"cells":["10","Hawaiian","hawaiian.png","$14"]}],"keyword":"When "},{"result":{"duration":811000,"status":"passed"},"line":21,"name":"the response status code should be 200","match":{"arguments":[{"val":"200","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T08:56:56.051Z","line":23,"name":"Add item for existent id","description":"","id":"inventory-api;add-item-for-existent-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":31688000,"status":"passed"},"line":24,"name":"I send a POST request to \"/api/inventory/add\" with body","match":{"arguments":[{"val":"\"/api/inventory/add\"","offset":25}],"location":"com.example.api.InventoryStepDefs.i_send_a_post_request_to_with_body(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["id","name","image","price"]},{"cells":["10","Hawaiian","hawaiian.png","$14"]}],"keyword":"When "},{"result":{"duration":593000,"status":"passed"},"line":27,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T08:56:56.097Z","line":29,"name":"Try to add item with missing information","description":"","id":"inventory-api;try-to-add-item-with-missing-information","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":29838000,"status":"passed"},"line":30,"name":"I send a POST request to \"/api/inventory/add\" with body","match":{"arguments":[{"val":"\"/api/inventory/add\"","offset":25}],"location":"com.example.api.InventoryStepDefs.i_send_a_post_request_to_with_body(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","image","price"]},{"cells":["Hawaiian","hawaiian.png","$14"]}],"keyword":"When "},{"result":{"duration":164000,"status":"passed"},"line":33,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":1573000,"status":"passed"},"line":34,"name":"the response should contain the message \"Not all requirements are met\"","match":{"arguments":[{"val":"\"Not all requirements are met\"","offset":40}],"location":"com.example.api.InventoryStepDefs.the_response_should_contain_the_message(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T08:56:56.146Z","line":36,"name":"Validate recent added item is present in the inventory","description":"","id":"inventory-api;validate-recent-added-item-is-present-in-the-inventory","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":16669000,"status":"passed"},"line":37,"name":"I send a GET request to \"/api/inventory\"","match":{"arguments":[{"val":"\"/api/inventory\"","offset":24}],"location":"com.example.api.InventoryStepDefs.i_send_a_get_request_to(java.lang.String)"},"keyword":"When "},{"result":{"duration":165000,"status":"passed"},"line":38,"name":"the response status code should be 200","match":{"arguments":[{"val":"200","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":47902000,"status":"passed"},"line":39,"name":"the response should contain an item with id \"10\", name \"Hawaiian\", price \"$14\", and image \"hawaiian.png\"","match":{"arguments":[{"val":"\"10\"","offset":44},{"val":"\"Hawaiian\"","offset":55},{"val":"\"$14\"","offset":73},{"val":"\"hawaiian.png\"","offset":90}],"location":"com.example.api.InventoryStepDefs.the_response_should_contain_an_item_with_id_name_price_and_image(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T08:56:56.225Z","line":41,"name":"Negative - Get inventory with invalid endpoint","description":"","id":"inventory-api;negative---get-inventory-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":19929000,"status":"passed"},"line":42,"name":"I send a GET request to \"/api/inventory/invalid\"","match":{"arguments":[{"val":"\"/api/inventory/invalid\"","offset":24}],"location":"com.example.api.InventoryStepDefs.i_send_a_get_request_to(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<404> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.example.api.InventoryStepDefs.the_response_status_code_should_be(InventoryStepDefs.java:33)\n\tat âœ½.the response status code should be 404(file:///Users/rakeshkumarbarik/Downloads/home-test-api/restassured-bdd/src/test/resources/features/inventory.feature:43)\n","duration":5598000,"status":"failed"},"line":43,"name":"the response status code should be 404","match":{"arguments":[{"val":"404","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":92000,"status":"skipped"},"line":44,"name":"the response should contain the message \"Not Found\"","match":{"arguments":[{"val":"\"Not Found\"","offset":40}],"location":"com.example.api.InventoryStepDefs.the_response_should_contain_the_message(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T08:56:56.276Z","line":46,"name":"Negative - Add item with missing all fields","description":"","id":"inventory-api;negative---add-item-with-missing-all-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":33477000,"status":"passed"},"line":47,"name":"I send a POST request to \"/api/inventory/add\" with body","match":{"arguments":[{"val":"\"/api/inventory/add\"","offset":25}],"location":"com.example.api.InventoryStepDefs.i_send_a_post_request_to_with_body(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name"]},{"cells":[""]}],"keyword":"When "},{"result":{"duration":128000,"status":"passed"},"line":50,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"com.example.api.InventoryStepDefs.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":410000,"status":"passed"},"line":51,"name":"the response should contain the message \"Not all requirements are met\"","match":{"arguments":[{"val":"\"Not all requirements are met\"","offset":40}],"location":"com.example.api.InventoryStepDefs.the_response_should_contain_the_message(java.lang.String)"},"keyword":"And "}]}],"name":"Inventory API","description":"As a user of the Inventory API\nI want to manage and query menu items\nSo that I can ensure the API works as expected","id":"inventory-api","keyword":"Feature","uri":"file:src/test/resources/features/inventory.feature","tags":[]}]